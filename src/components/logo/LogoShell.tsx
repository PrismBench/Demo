/**
 * LogoShell component provides a reusable SVG structure for creating logos
 * where a graphical element is partially revealed through text characters.
 * It utilizes an SVG mask generated by the `MaskDefs` component.
 */
import React from "react";
import MaskDefs from "./MaskDefs";
import { useMaskId } from "./useMaskId";

/**
 * Props for the LogoShell component.
 */
interface LogoShellProps {
  /** The full text string for the logo. Defaults to "PRISM". */
  text?: string;
  /** The characters within the text that reveal the underlying graphic. Defaults to "SM". */
  revealChars?: string;
  /** The React functional component representing the underlying graphic to be masked. */
  Graphic: React.FC<any>;
  /** Optional: The width of the SVG viewbox. Defaults to 400. */
  width?: number;
  /** Optional: The height of the SVG viewbox. Defaults to 150. */
  height?: number;
  /** Optional: The font size for the logo text. Defaults to 120. */
  fontSize?: number;
  /** Optional: The font family for the logo text. Defaults to "Montserrat, sans-serif". */
  fontFamily?: string;
  /** Optional: The letter spacing for the logo text. Defaults to "0.05em". */
  letterSpacing?: string | number;
}

/**
 * Renders an SVG logo that combines text and a graphic using masking.
 *
 * The component sets up an SVG with definitions for a text-based mask.
 * It then renders the provided `Graphic` component masked by this definition.
 * Finally, it overlays the non-revealed parts of the text in solid color
 * to complete the logo effect.
 *
 * @param {LogoShellProps} props - The component props.
 * @returns {React.ReactElement} The rendered SVG logo element.
 */
const LogoShell: React.FC<LogoShellProps> = ({
  text = "PRISM",
  revealChars = "SM",
  Graphic,
  width = 400,
  height = 150,
  fontSize = 120,
  fontFamily = "Montserrat, sans-serif",
  letterSpacing = "0.05em",
}) => {
  const maskId = useMaskId("prism-logo-mask");
  const baseline = fontSize; // simple baseline

  return (
    <svg
      role="img"
      aria-label={text}
      viewBox={`0 0 ${width} ${height}`}
      width={width}
      height={height}
    >
      <MaskDefs
        id={maskId}
        text={text}
        revealChars={revealChars}
        fontSize={fontSize}
        y={baseline}
        fontFamily={fontFamily}
        letterSpacing={letterSpacing}
      />

      {/* masked graphic */}
      <g mask={`url(#${maskId})`}>
        <Graphic />
      </g>

      {/* solid overlay text (only nonâ€‘revealed letters) */}
      <text
        x={0}
        y={baseline}
        fontSize={fontSize}
        fontFamily={fontFamily}
        letterSpacing={letterSpacing}
        fontWeight="700"
      >
        {text.split("").map((ch, i) =>
          revealChars.includes(ch) ? null : (
            <tspan key={i} fill="currentColor">
              {ch}
            </tspan>
          )
        )}
      </text>
    </svg>
  );
};

export default LogoShell;
